
/**
 * ## MisskeyHub API Paths
 * 
 * Misskeyの公開・非公開APIのエンドポイント一覧です。
 * 
 * 一部の関数は引数を必要とします。
 * 
 * @MisskeyEndpointsGenerator - version 1.0.0
 * @AutoGenerated - since 2024/01/29
 */
export const Paths = {

	// absolutes //

	/**
	 * Route for:
	 *`WS` /streaming
	 */
	Streaming(token: string) {
		return `/streaming?i=${token}` as const;
	},

	/**
	 * Route for:
	 *`GET` /api/i
	 */
	get I() {
		return "/api/i" as const;
	},

	/**
	 * Route for:
	 *`GET` /api/meta
	 * 
	 */
	get Meta() {
		return "/api/meta" as const;
	},

	// Users //

	get Followers() {
		return "/api/users/followers" as const;
	},

	get GetRecommentation() {
		return "/api/users/recommend" as const;
	},

	get GetStatus() {
		return "/api/users/stats" as const;
	},

	// Notes //

	get DeleteNote() {
		return "/api/notes/delete" as const;
	},

	get GetChildren() {
		return "/api/notes/children" as const;
	},

	get SearchNote() {
		return "/api/notes/search" as const;
	},

	get GetMentionedNotes() {
		return "/api/notes/mentions" as const;
	},

	get GetNote() {
		return "/api/notes/show" as const;
	},

	get CreateNote() {
		return "/api/notes/create" as const;
	},

	get Renote() {
		return "/api/notes/create" as const;
	},

	get UnRenote() {
		return "/api/notes/unrenote" as const;
	},

	get GetRenote() {
		return "/api/notes/renotes" as const;
	},

	get CrateReaction() {
		return "/api/notes/reactions/create" as const;
	},

	get DeleteReaction() {
		return "/api/notes/reactions/delete" as const;
	},

	// favorites //

	get CreateFavorite() {
		return "/api/favorites/create" as const;
	},

	get DeleteFavorite() {
		return "/api/favorites/delete" as const;
	},


	get meta() {
		return "/api/admin/meta" as const;
	},


	get AbuseUserReports() {
		return "/api/admin/abuse-user-reports" as const;
	},


	get accountsCreate() {
		return "/api/admin/accounts/create" as const;
	},


	get accountsDelete() {
		return "/api/admin/accounts/delete" as const;
	},


	get accountsFindByEmail() {
		return "/api/admin/accounts/find-by-email" as const;
	},


	get adCreate() {
		return "/api/admin/ad/create" as const;
	},


	get adDelete() {
		return "/api/admin/ad/delete" as const;
	},


	get adList() {
		return "/api/admin/ad/list" as const;
	},


	get adUpdate() {
		return "/api/admin/ad/update" as const;
	},


	get announcementsCreate() {
		return "/api/admin/announcements/create" as const;
	},


	get announcementsDelete() {
		return "/api/admin/announcements/delete" as const;
	},


	get announcementsList() {
		return "/api/admin/announcements/list" as const;
	},


	get announcementsUpdate() {
		return "/api/admin/announcements/update" as const;
	},


	get abuseReportResolverCreate() {
		return "/api/admin/abuse-report-resolver/create" as const;
	},


	get abuseReportResolverList() {
		return "/api/admin/abuse-report-resolver/list" as const;
	},


	get abuseReportResolverDelete() {
		return "/api/admin/abuse-report-resolver/delete" as const;
	},


	get abuseReportResolverUpdate() {
		return "/api/admin/abuse-report-resolver/update" as const;
	},


	get avatarDecorationsCreate() {
		return "/api/admin/avatar-decorations/create" as const;
	},


	get avatarDecorationsDelete() {
		return "/api/admin/avatar-decorations/delete" as const;
	},


	get avatarDecorationsList() {
		return "/api/admin/avatar-decorations/list" as const;
	},


	get avatarDecorationsUpdate() {
		return "/api/admin/avatar-decorations/update" as const;
	},


	get deleteAllFilesOfAUser() {
		return "/api/admin/delete-all-files-of-a-user" as const;
	},


	get unsetUserAvatar() {
		return "/api/admin/unset-user-avatar" as const;
	},


	get unsetUserBanner() {
		return "/api/admin/unset-user-banner" as const;
	},


	get driveCleanRemoteFiles() {
		return "/api/admin/drive/clean-remote-files" as const;
	},


	get driveCleanup() {
		return "/api/admin/drive/cleanup" as const;
	},


	get driveFiles() {
		return "/api/admin/drive/files" as const;
	},


	get driveShowFile() {
		return "/api/admin/drive/show-file" as const;
	},


	get emojiAddAliasesBulk() {
		return "/api/admin/emoji/add-aliases-bulk" as const;
	},


	get emojiAdd() {
		return "/api/admin/emoji/add" as const;
	},


	get emojiCopy() {
		return "/api/admin/emoji/copy" as const;
	},


	get emojiDeleteBulk() {
		return "/api/admin/emoji/delete-bulk" as const;
	},


	get emojiDelete() {
		return "/api/admin/emoji/delete" as const;
	},


	get emojiImportZip() {
		return "/api/admin/emoji/import-zip" as const;
	},


	get emojiListRemote() {
		return "/api/admin/emoji/list-remote" as const;
	},


	get emojiList() {
		return "/api/admin/emoji/list" as const;
	},


	get emojiRemoveAliasesBulk() {
		return "/api/admin/emoji/remove-aliases-bulk" as const;
	},


	get emojiSetAliasesBulk() {
		return "/api/admin/emoji/set-aliases-bulk" as const;
	},


	get emojiSetCategoryBulk() {
		return "/api/admin/emoji/set-category-bulk" as const;
	},


	get emojiSetLicenseBulk() {
		return "/api/admin/emoji/set-license-bulk" as const;
	},


	get emojiUpdate() {
		return "/api/admin/emoji/update" as const;
	},


	get federationDeleteAllFiles() {
		return "/api/admin/federation/delete-all-files" as const;
	},


	get federationRefreshRemoteInstanceMetadata() {
		return "/api/admin/federation/refresh-remote-instance-metadata" as const;
	},


	get federationRemoveAllFollowing() {
		return "/api/admin/federation/remove-all-following" as const;
	},


	get federationUpdateInstance() {
		return "/api/admin/federation/update-instance" as const;
	},


	get getIndexStats() {
		return "/api/admin/get-index-stats" as const;
	},


	get getTableStats() {
		return "/api/admin/get-table-stats" as const;
	},


	get getUserIps() {
		return "/api/admin/get-user-ips" as const;
	},


	get inviteCreate() {
		return "/api/admin/invite/create" as const;
	},


	get inviteList() {
		return "/api/admin/invite/list" as const;
	},


	get promoCreate() {
		return "/api/admin/promo/create" as const;
	},


	get queueClear() {
		return "/api/admin/queue/clear" as const;
	},


	get queueDeliverDelayed() {
		return "/api/admin/queue/deliver-delayed" as const;
	},


	get queueInboxDelayed() {
		return "/api/admin/queue/inbox-delayed" as const;
	},


	get queuePromote() {
		return "/api/admin/queue/promote" as const;
	},


	get queueStats() {
		return "/api/admin/queue/stats" as const;
	},


	get relaysAdd() {
		return "/api/admin/relays/add" as const;
	},


	get relaysList() {
		return "/api/admin/relays/list" as const;
	},


	get relaysRemove() {
		return "/api/admin/relays/remove" as const;
	},


	get resetPassword() {
		return "/api/admin/reset-password" as const;
	},


	get resolveAbuseUserReport() {
		return "/api/admin/resolve-abuse-user-report" as const;
	},


	get sendEmail() {
		return "/api/admin/send-email" as const;
	},


	get serverInfo() {
		return "/api/admin/server-info" as const;
	},


	get showModerationLogs() {
		return "/api/admin/show-moderation-logs" as const;
	},


	get showUser() {
		return "/api/admin/show-user" as const;
	},


	get showUsers() {
		return "/api/admin/show-users" as const;
	},


	get suspendUser() {
		return "/api/admin/suspend-user" as const;
	},


	get unsuspendUser() {
		return "/api/admin/unsuspend-user" as const;
	},


	get updateMeta() {
		return "/api/admin/update-meta" as const;
	},


	get deleteAccount() {
		return "/api/admin/delete-account" as const;
	},


	get updateUserNote() {
		return "/api/admin/update-user-note" as const;
	},


	get rolesCreate() {
		return "/api/admin/roles/create" as const;
	},


	get rolesDelete() {
		return "/api/admin/roles/delete" as const;
	},


	get rolesList() {
		return "/api/admin/roles/list" as const;
	},


	get rolesShow() {
		return "/api/admin/roles/show" as const;
	},


	get rolesUpdate() {
		return "/api/admin/roles/update" as const;
	},


	get rolesAssign() {
		return "/api/admin/roles/assign" as const;
	},


	get rolesUnassign() {
		return "/api/admin/roles/unassign" as const;
	},


	get rolesUpdateDefaultPolicies() {
		return "/api/admin/roles/update-default-policies" as const;
	},


	get rolesUsers() {
		return "/api/admin/roles/users" as const;
	},


	get GetAnnouncements() {
		return "/api/announcements" as const;
	},


	get AntennasCreate() {
		return "/api/antennas/create" as const;
	},


	get AntennasDelete() {
		return "/api/antennas/delete" as const;
	},


	get Antennaslist() {
		return "/api/antennas/list" as const;
	},


	get AntennasNotes() {
		return "/api/antennas/notes" as const;
	},


	get AntennasShow() {
		return "/api/antennas/show" as const;
	},


	get AntennasUpdate() {
		return "/api/antennas/update" as const;
	},


	get ApGet() {
		return "/api/ap/get" as const;
	},


	get ApShow() {
		return "/api/ap/show" as const;
	},


	get AppCreate() {
		return "/api/app/create" as const;
	},


	get show() {
		return "/api/app/show" as const;
	},


	get AuthAccept() {
		return "/api/auth/accept" as const;
	},


	get sessionGenerate() {
		return "/api/auth/session/generate" as const;
	},


	get sessionShow() {
		return "/api/auth/session/show" as const;
	},


	get sessionUserkey() {
		return "/api/auth/session/userkey" as const;
	},


	get BlockingCreate() {
		return "/api/blocking/create" as const;
	},


	get BlockingDelete() {
		return "/api/blocking/delete" as const;
	},


	get BlockingList() {
		return "/api/blocking/list" as const;
	},


	get ChannelsCreate() {
		return "/api/channels/create" as const;
	},


	get ChannelsFeatured() {
		return "/api/channels/featured" as const;
	},


	get ChannelsFollow() {
		return "/api/channels/follow" as const;
	},


	get ChannelsFollowed() {
		return "/api/channels/followed" as const;
	},


	get ChannelsOwned() {
		return "/api/channels/owned" as const;
	},


	get ChannelsShow() {
		return "/api/channels/show" as const;
	},


	get ChannelsTimeline() {
		return "/api/channels/timeline" as const;
	},


	get ChannelsUnfollow() {
		return "/api/channels/unfollow" as const;
	},


	get ChannelsUpdate() {
		return "/api/channels/update" as const;
	},


	get ChannelsFavorite() {
		return "/api/channels/favorite" as const;
	},


	get ChannelsUnfavorite() {
		return "/api/channels/unfavorite" as const;
	},


	get ChannelsMyfavorites() {
		return "/api/channels/my-favorites" as const;
	},


	get ChannelsSearch() {
		return "/api/channels/search" as const;
	},


	get ChartsActiveUsers() {
		return "/api/charts/active-users" as const;
	},


	get ChartsApRequest() {
		return "/api/charts/ap-request" as const;
	},


	get ChartsDrive() {
		return "/api/charts/drive" as const;
	},


	get ChartsFederation() {
		return "/api/charts/federation" as const;
	},


	get ChartsInstance() {
		return "/api/charts/instance" as const;
	},


	get ChartsNotes() {
		return "/api/charts/notes" as const;
	},


	get ChartsUserDrive() {
		return "/api/charts/user/drive" as const;
	},


	get ChartsUserFollowing() {
		return "/api/charts/user/following" as const;
	},


	get ChartsUserNotes() {
		return "/api/charts/user/notes" as const;
	},


	get ChartsUserPv() {
		return "/api/charts/user/pv" as const;
	},


	get ChartsUserReactions() {
		return "/api/charts/user/reactions" as const;
	},


	get ChartsUsers() {
		return "/api/charts/users" as const;
	},


	get addNote() {
		return "/api/clips/add-note" as const;
	},


	get removenote() {
		return "/api/clips/remove-note" as const;
	},


	get create() {
		return "/api/clips/create" as const;
	},


	get delete() {
		return "/api/clips/delete" as const;
	},


	get list() {
		return "/api/clips/list" as const;
	},


	get notes() {
		return "/api/clips/notes" as const;
	},


	get ClipsShow() {
		return "/api/clips/show" as const;
	},


	get update() {
		return "/api/clips/update" as const;
	},


	get favorite() {
		return "/api/clips/favorite" as const;
	},


	get unfavorite() {
		return "/api/clips/unfavorite" as const;
	},


	get myfavorites() {
		return "/api/clips/my-favorites" as const;
	},


	get drive() {
		return "/api/drive" as const;
	},


	get files() {
		return "/api/drive/files" as const;
	},


	get filesAttachednotes() {
		return "/api/drive/files/attached-notes" as const;
	},


	get filesCheckexistence() {
		return "/api/drive/files/check-existence" as const;
	},


	get filesCreate() {
		return "/api/drive/files/create" as const;
	},


	get filesDelete() {
		return "/api/drive/files/delete" as const;
	},


	get filesFindbyhash() {
		return "/api/drive/files/find-by-hash" as const;
	},


	get filesFind() {
		return "/api/drive/files/find" as const;
	},


	get filesShow() {
		return "/api/drive/files/show" as const;
	},


	get filesUpdate() {
		return "/api/drive/files/update" as const;
	},


	get filesUploadfromurl() {
		return "/api/drive/files/upload-from-url" as const;
	},


	get folders() {
		return "/api/drive/folders" as const;
	},


	get foldersCreate() {
		return "/api/drive/folders/create" as const;
	},


	get foldersDelete() {
		return "/api/drive/folders/delete" as const;
	},


	get foldersFind() {
		return "/api/drive/folders/find" as const;
	},


	get foldersShow() {
		return "/api/drive/folders/show" as const;
	},


	get foldersUpdate() {
		return "/api/drive/folders/update" as const;
	},


	get stream() {
		return "/api/drive/stream" as const;
	},


	get available() {
		return "/api/email-address/available" as const;
	},


	get GetEndPoint() {
		return "/api/endpoint" as const;
	},


	get GetEndPoints() {
		return "/api/endpoints" as const;
	},


	get ExportCustomEmojis() {
		return "/api/export-custom-emojis" as const;
	},


	get followers() {
		return "/api/federation/followers" as const;
	},


	get following() {
		return "/api/federation/following" as const;
	},


	get instances() {
		return "/api/federation/instances" as const;
	},


	get showinstance() {
		return "/api/federation/show-instance" as const;
	},


	get updateremoteuser() {
		return "/api/federation/update-remote-user" as const;
	},


	get users() {
		return "/api/federation/users" as const;
	},


	get stats() {
		return "/api/federation/stats" as const;
	},


	get FollowingCreate() {
		return "/api/following/create" as const;
	},


	get FollowingDelete() {
		return "/api/following/delete" as const;
	},


	get FollowingUpdate() {
		return "/api/following/update" as const;
	},


	get FollowingUpdateall() {
		return "/api/following/update-all" as const;
	},


	get FollowingInvalidate() {
		return "/api/following/invalidate" as const;
	},


	get FollowingRequestsAccept() {
		return "/api/following/requests/accept" as const;
	},


	get FollowingRequestsCancel() {
		return "/api/following/requests/cancel" as const;
	},


	get FollowingRequestsList() {
		return "/api/following/requests/list" as const;
	},


	get FollowingRequestsReject() {
		return "/api/following/requests/reject" as const;
	},


	get FollowingFeatured() {
		return "/api/gallery/featured" as const;
	},


	get popular() {
		return "/api/gallery/popular" as const;
	},


	get posts() {
		return "/api/gallery/posts" as const;
	},


	get postsCreate() {
		return "/api/gallery/posts/create" as const;
	},


	get postsDelete() {
		return "/api/gallery/posts/delete" as const;
	},


	get postsLike() {
		return "/api/gallery/posts/like" as const;
	},


	get postsShow() {
		return "/api/gallery/posts/show" as const;
	},


	get postsUnlike() {
		return "/api/gallery/posts/unlike" as const;
	},


	get postsUpdate() {
		return "/api/gallery/posts/update" as const;
	},


	get GetOnlineUsers() {
		return "/api/get-online-users-count" as const;
	},


	get GetAvaterDecorations() {
		return "/api/get-avatar-decorations" as const;
	},


	get GetHashtagsList() {
		return "/api/hashtags/list" as const;
	},


	get HasttagSearch() {
		return "/api/hashtags/search" as const;
	},


	get showHasttag() {
		return "/api/hashtags/show" as const;
	},


	get Gettrend() {
		return "/api/hashtags/trend" as const;
	},


	get GetHashtagUsers() {
		return "/api/hashtags/users" as const;
	},

	get TwofactorDone() {
		return "/api/i/2fa/done" as const;
	},


	get TwofactorKeydone() {
		return "/api/i/2fa/key-done" as const;
	},


	get TwofactorPasswordless() {
		return "/api/i/2fa/password-less" as const;
	},


	get TwofactorRegisterkey() {
		return "/api/i/2fa/register-key" as const;
	},


	get TwofactorRegister() {
		return "/api/i/2fa/register" as const;
	},


	get TwofactorUpdatekey() {
		return "/api/i/2fa/update-key" as const;
	},


	get TwofactorRemovekey() {
		return "/api/i/2fa/remove-key" as const;
	},


	get TwofactorUnregister() {
		return "/api/i/2fa/unregister" as const;
	},


	get GetIApps() {
		return "/api/i/apps" as const;
	},


	get Authorizedapps() {
		return "/api/i/authorized-apps" as const;
	},


	get Claimachievement() {
		return "/api/i/claim-achievement" as const;
	},


	get Changepassword() {
		return "/api/i/change-password" as const;
	},


	get DeleteAccount() {
		return "/api/i/delete-account" as const;
	},


	get Exportblocking() {
		return "/api/i/export-blocking" as const;
	},


	get Exportfollowing() {
		return "/api/i/export-following" as const;
	},


	get Exportmute() {
		return "/api/i/export-mute" as const;
	},


	get Exportnotes() {
		return "/api/i/export-notes" as const;
	},


	get Exportfavorites() {
		return "/api/i/export-favorites" as const;
	},


	get Exportuserlists() {
		return "/api/i/export-user-lists" as const;
	},


	get ExportAntennas() {
		return "/api/i/export-antennas" as const;
	},


	get Favorites() {
		return "/api/i/favorites" as const;
	},


	get GalleryLikes() {
		return "/api/i/gallery/likes" as const;
	},


	get GalleryPosts() {
		return "/api/i/gallery/posts" as const;
	},


	get Importblocking() {
		return "/api/i/import-blocking" as const;
	},


	get Importfollowing() {
		return "/api/i/import-following" as const;
	},


	get Importmuting() {
		return "/api/i/import-muting" as const;
	},


	get Importuserlists() {
		return "/api/i/import-user-lists" as const;
	},


	get ImportAntennas() {
		return "/api/i/import-antennas" as const;
	},

	get NotificationsGrouped() {
		return "/api/i/notifications-grouped" as const;
	},


	get Pagelikes() {
		return "/api/i/page-likes" as const;
	},


	get GetPages() {
		return "/api/i/pages" as const;
	},


	get GetPin() {
		return "/api/i/pin" as const;
	},


	get GetReadallunReadNotes() {
		return "/api/i/read-all-unread-notes" as const;
	},


	get GetReadAnnouncement() {
		return "/api/i/read-announcement" as const;
	},


	get RegenerateToken() {
		return "/api/i/regenerate-token" as const;
	},


	get RegistryGetall() {
		return "/api/i/registry/get-all" as const;
	},


	get RegistryGetdetail() {
		return "/api/i/registry/get-detail" as const;
	},


	get RegistryGet() {
		return "/api/i/registry/get" as const;
	},


	get RegistryKeyswithType() {
		return "/api/i/registry/keys-with-type" as const;
	},


	get RegistryKeys() {
		return "/api/i/registry/keys" as const;
	},


	get RegistryRemove() {
		return "/api/i/registry/remove" as const;
	},


	get RegistryScopeswithdomain() {
		return "/api/i/registry/scopes-with-domain" as const;
	},


	get RegistrySet() {
		return "/api/i/registry/set" as const;
	},


	get Revoketoken() {
		return "/api/i/revoke-token" as const;
	},


	get Signinhistory() {
		return "/api/i/signin-history" as const;
	},


	get Unpin() {
		return "/api/i/unpin" as const;
	},


	get Updateemail() {
		return "/api/i/update-email" as const;
	},


	get Update() {
		return "/api/i/update" as const;
	},


	get Move() {
		return "/api/i/move" as const;
	},


	get WebhooksCreate() {
		return "/api/i/webhooks/create" as const;
	},


	get WebhooksList() {
		return "/api/i/webhooks/list" as const;
	},


	get WebhooksShow() {
		return "/api/i/webhooks/show" as const;
	},


	get WebhooksUpdate() {
		return "/api/i/webhooks/update" as const;
	},


	get WebhooksDelete() {
		return "/api/i/webhooks/delete" as const;
	},


	get InviteCreate() {
		return "/api/invite/create" as const;
	},


	get InviteDelete() {
		return "/api/invite/delete" as const;
	},


	get InviteList() {
		return "/api/invite/list" as const;
	},


	get InviteLimit() {
		return "/api/invite/limit" as const;
	},

	get GetEmojis() {
		return "/api/emojis" as const;
	},


	get GetEmoji() {
		return "/api/emoji" as const;
	},


	get Gentoken() {
		return "/api/miauth/gen-token" as const;
	},


	get MuteCreate() {
		return "/api/mute/create" as const;
	},


	get MuteDelete() {
		return "/api/mute/delete" as const;
	},


	get MuteList() {
		return "/api/mute/list" as const;
	},


	get RenoteMuteCreate() {
		return "/api/renote-mute/create" as const;
	},


	get RenoteMuteDelete() {
		return "/api/renote-mute/delete" as const;
	},


	get RenoteMuteList() {
		return "/api/renote-mute/list" as const;
	},


	get MyApps() {
		return "/api/my/apps" as const;
	},


	get Notes() {
		return "/api/notes" as const;
	},


	get GetNoteChildren() {
		return "/api/notes/children" as const;
	},


	get NoteClips() {
		return "/api/notes/clips" as const;
	},


	get NoteConversation() {
		return "/api/notes/conversation" as const;
	},

	get favoritesCreate() {
		return "/api/notes/favorites/create" as const;
	},


	get favoritesDelete() {
		return "/api/notes/favorites/delete" as const;
	},


	get Notesfeatured() {
		return "/api/notes/featured" as const;
	},


	get Globaltimeline() {
		return "/api/notes/global-timeline" as const;
	},


	get Hybridtimeline() {
		return "/api/notes/hybrid-timeline" as const;
	},


	get Localtimeline() {
		return "/api/notes/local-timeline" as const;
	},


	get NotesMentions() {
		return "/api/notes/mentions" as const;
	},


	get PollsRecommendation() {
		return "/api/notes/polls/recommendation" as const;
	},


	get PollsVote() {
		return "/api/notes/polls/vote" as const;
	},


	get NoteReactions() {
		return "/api/notes/reactions" as const;
	},


	get NoteReactionsCreate() {
		return "/api/notes/reactions/create" as const;
	},


	get NoteReactionsDelete() {
		return "/api/notes/reactions/delete" as const;
	},


	get NoteRenotes() {
		return "/api/notes/renotes" as const;
	},


	get NoteReplies() {
		return "/api/notes/replies" as const;
	},


	get NoteSearchbytag() {
		return "/api/notes/search-by-tag" as const;
	},


	get NoteSearch() {
		return "/api/notes/search" as const;
	},


	get NoteShow() {
		return "/api/notes/show" as const;
	},


	get NoteState() {
		return "/api/notes/state" as const;
	},


	get NoteThreadmutingCreate() {
		return "/api/notes/thread-muting/create" as const;
	},


	get NoteThreadmutingDelete() {
		return "/api/notes/thread-muting/delete" as const;
	},


	get NoteTimeline() {
		return "/api/notes/timeline" as const;
	},


	get Translate() {
		return "/api/notes/translate" as const;
	},


	get Unrenote() {
		return "/api/notes/unrenote" as const;
	},


	get Userlisttimeline() {
		return "/api/notes/user-list-timeline" as const;
	},


	get NotificationCreate() {
		return "/api/notifications/create" as const;
	},


	get Markallasread() {
		return "/api/notifications/mark-all-as-read" as const;
	},


	get TestNotification() {
		return "/api/notifications/test-notification" as const;
	},


	get PushPages() {
		return "/api/page-push" as const;
	},


	get PagesCreate() {
		return "/api/pages/create" as const;
	},


	get PagesDelete() {
		return "/api/pages/delete" as const;
	},


	get PagesFeatured() {
		return "/api/pages/featured" as const;
	},


	get PagesLike() {
		return "/api/pages/like" as const;
	},


	get PagesShow() {
		return "/api/pages/show" as const;
	},


	get PagesUnlike() {
		return "/api/pages/unlike" as const;
	},


	get PagesUpdate() {
		return "/api/pages/update" as const;
	},


	get FlashCreate() {
		return "/api/flash/create" as const;
	},


	get DeleteFlash() {
		return "/api/flash/delete" as const;
	},


	get FlashFeatured() {
		return "/api/flash/featured" as const;
	},


	get FlashLike() {
		return "/api/flash/like" as const;
	},


	get FlashShow() {
		return "/api/flash/show" as const;
	},


	get Flashunlike() {
		return "/api/flash/unlike" as const;
	},


	get FlashUpdate() {
		return "/api/flash/update" as const;
	},


	get FlashMy() {
		return "/api/flash/my" as const;
	},


	get Flashmylikes() {
		return "/api/flash/my-likes" as const;
	},


	get Ping() {
		return "/api/ping" as const;
	},


	get PinnedUsers() {
		return "/api/pinned-users" as const;
	},


	get read() {
		return "/api/promo/read" as const;
	},


	get RolesList() {
		return "/api/roles/list" as const;
	},


	get RolesShow() {
		return "/api/roles/show" as const;
	},


	get RolesUsers() {
		return "/api/roles/users" as const;
	},


	get RolesNotes() {
		return "/api/roles/notes" as const;
	},


	get RequestResetPassword() {
		return "/api/request-reset-password" as const;
	},


	get ResetDB() {
		return "/api/reset-db" as const;
	},


	get ResetPassword() {
		return "/api/reset-password" as const;
	},


	get GetServerInfo() {
		return "/api/server-info" as const;
	},


	get GetStats() {
		return "/api/stats" as const;
	},


	get ServiceWorkerShowRegistration() {
		return "/api/sw/show-registration" as const;
	},


	get ServiceWorkerUpdateRegistration() {
		return "/api/sw/update-registration" as const;
	},


	get ServiceWorkerRegister() {
		return "/api/sw/register" as const;
	},


	get ServiceWorkerUnregister() {
		return "/api/sw/unregister" as const;
	},


	get Test() {
		return "/api/test" as const;
	},


	get UsernameAvailable() {
		return "/api/username/available" as const;
	},


	get GetUsers() {
		return "/api/users" as const;
	},


	get clips() {
		return "/api/users/clips" as const;
	},


	get UsersFollowers() {
		return "/api/users/followers" as const;
	},


	get UsersFollowing() {
		return "/api/users/following" as const;
	},


	get galleryPosts() {
		return "/api/users/gallery/posts" as const;
	},


	get getfrequentlyrepliedusers() {
		return "/api/users/get-frequently-replied-users" as const;
	},


	get featurednotes() {
		return "/api/users/featured-notes" as const;
	},


	get listsCreate() {
		return "/api/users/lists/create" as const;
	},


	get listsDelete() {
		return "/api/users/lists/delete" as const;
	},


	get listsList() {
		return "/api/users/lists/list" as const;
	},


	get listsPull() {
		return "/api/users/lists/pull" as const;
	},


	get listsPush() {
		return "/api/users/lists/push" as const;
	},


	get listsShow() {
		return "/api/users/lists/show" as const;
	},


	get listsFavorite() {
		return "/api/users/lists/favorite" as const;
	},


	get listsUnfavorite() {
		return "/api/users/lists/unfavorite" as const;
	},


	get listsUpdate() {
		return "/api/users/lists/update" as const;
	},


	get listsCreatefrompublic() {
		return "/api/users/lists/create-from-public" as const;
	},


	get listsUpdatemembership() {
		return "/api/users/lists/update-membership" as const;
	},


	get listsGetmemberships() {
		return "/api/users/lists/get-memberships" as const;
	},


	get UsersNotes() {
		return "/api/users/notes" as const;
	},


	get pages() {
		return "/api/users/pages" as const;
	},


	get flashs() {
		return "/api/users/flashs" as const;
	},


	get reactions() {
		return "/api/users/reactions" as const;
	},


	get recommendation() {
		return "/api/users/recommendation" as const;
	},


	get relation() {
		return "/api/users/relation" as const;
	},


	get reportabuse() {
		return "/api/users/report-abuse" as const;
	},


	get searchbyusernameandhost() {
		return "/api/users/search-by-username-and-host" as const;
	},


	get search() {
		return "/api/users/search" as const;
	},


	get UsersShow() {
		return "/api/users/show" as const;
	},


	get UserStats() {
		return "/api/users/stats" as const;
	},


	get achievements() {
		return "/api/users/achievements" as const;
	},


	get updatememo() {
		return "/api/users/update-memo" as const;
	},


	get FetchRss() {
		return "/api/fetch-rss" as const;
	},


	get FetchExternalResources() {
		return "/api/fetch-external-resources" as const;
	},


	get Retention() {
		return "/api/retention" as const;
	},

} as const;
